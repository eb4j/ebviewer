name: Build and release

on: push

jobs:
  build:
    name: Build and check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    - uses: kiancross/checkstyle-annotations-action@v1
    - uses: gradle/gradle-build-action@v2
      with:
        arguments: build
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: release-files
        path: build/distributions/

  nativeImage:
    name: ${{ matrix.version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: ['22.0.0.2']
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          sudo apt update
          sudo apt install -y upx-ucl libxi-dev libxt-dev libgles-dev libgl-dev
      - uses: graalvm/setup-graalvm@v1
        with:
          version: ${{ matrix.version }}
          java-version: '11'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: gradle/gradle-build-action@v2
      - name: Build native image
        run: |
          ./gradlew nativeImage
          upx build/bin/ebviewer
          ./gradlew zipExecutable
      - name: Upload java dist asset
        uses: actions/upload-artifact@v3
        with:
          name: release-files
          path: build/distributions/

  release:
    name: publish to github release
    runs-on: ubuntu-latest
    needs: [build, nativeImage]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    - name: Get the version
      id: get_version
      run: |
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
    - name: Download distributions artifact
      uses: actions/download-artifact@v3
      with:
        name: release-files
        path: distributions
    - name: Create release
      uses: "marvinpinto/action-automatic-releases@latest"
      id: create_release
      with:
        title: Release v${{ steps.get_version.outputs.VERSION }}
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        draft: false
        prerelease: false
        files: |
          distributions/*.zip
